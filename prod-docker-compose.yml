services:
  # SIREN NWWS Connection Service
  noaa-service:
    image: ghcr.io/cs4366/siren-noaa-service:geoprocessing.dev
    container_name: noaa-service
    stop_grace_period: 5s
    restart: always
    networks:
      - siren-network
    environment:
      - ENV=PROD
      - RABBITMQ_URL=amqp://rabbitmq
      - NWWS_USER=CHANGE_ME
      - NWWS_PASSWORD=CHANGE_ME
      - NWWS_NICKNAME=CHANGE_ME
    depends_on:
      message-queue:
        condition: service_healthy
  # SIREN Alert Tracking Service
  tracking-service:
    container_name: tracking-service
    ports:
      - "6091:6091"
    image: ghcr.io/cs4366/siren-tracking-service:geoprocessing.dev
    restart: always
    networks:
      - siren-network
    environment:
      - ENV=PROD
      - RABBITMQ_URL=amqp://rabbitmq
      - MONGO_URI=mongodb://mongodb:27017
    depends_on:
      message-queue:
        condition: service_healthy
  # SIREN Frontend Service
  frontend-service:
    container_name: frontend-service
    image: ghcr.io/cs4366/siren-frontend-service:geoprocessing.dev
    networks:
      - siren-network
    ports:
      - "8080:80"
  # SIREN API Service
  api-service:
    container_name: api-service
    image: ghcr.io/cs4366/siren-api-service:geoprocessing.dev
    networks:
      - siren-network
    ports:
      - "3030:3030"
    environment:
      - PORT=3030
      - MONGO_URL=mongodb://mongodb:27017
    depends_on:
      - db
  # SIREN Push Service
  push-service:
    container_name: push-service
    image: ghcr.io/cs4366/siren-push-service:latest
    networks:
      - siren-network
    ports:
      - "4000:4000"
    environment:
      - RABBITMQ_URL=amqp://rabbitmq
    depends_on:
      message-queue:
        condition: service_healthy
  # SIREN Geo Service
  geo-service:
    container_name: geo-service
    image: ghcr.io/cs4366/siren-geo-service:geoprocessing.dev
    networks:
      - siren-network
    ports:
      - "6906:6906"
    environment:
      - MONGO_URI=mongodb://mongodb:27017
    depends_on:
      depends_on:
        - db

  # RabbitMQ Message Queue
  message-queue:
    image: rabbitmq:4.0-management
    container_name: rabbitmq
    ports:
      - 5672:5672
      - 15672:15672
    restart: always
    networks:
      - siren-network
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MongoDB Database
  db:
    image: mongo:latest
    container_name: mongodb
    ports:
      - 27017:27017
    restart: always
    networks:
      - siren-network
    volumes:
      - ./mongo-init:/docker-entrypoint-initdb.d:ro
      - mongodb_data:/data/db

  prometheus:
    image: prom/prometheus:latest
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
    restart: always
    networks:
      - siren-network

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    restart: always
    ports:
      - "8082:8082"
    command:
      - "-port=8082"
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - siren-network

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
    expose:
      - 9100
    networks:
      - siren-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - 3000:3000
    volumes:
      - ./grafana-plugins:/var/lib/grafana/plugins
      - grafana_data:/var/lib/grafana
    restart: always
    environment:
      - GF_PLUGINS_ALLOW_LOADING_UNSIGNED_PLUGINS=haohanyang-mongodb-datasource
      - GF_SERVER_SERVE_FROM_SUB_PATH=false
      - GF_SERVER_ROOT_URL=https://siren-dashboard.jaxcksn.dev/
    networks:
      - siren-network

networks:
  siren-network:
    driver: bridge

volumes:
  grafana_data:
  mongodb_data:
